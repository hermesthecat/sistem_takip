    num_cpu=$(echo "$config_info" | grep "numCPUs" | awk '{print $3}' | tr -d '",')
    
    # Calculate total disk size
    # Toplam disk boyutunu hesapla
    total_disk_size_gb=0
    while IFS= read -r disk_line; do
        if [[ $disk_line =~ "diskPath" ]]; then
            disk_path=$(echo "$disk_line" | sed 's/.*"\(.*\)".*/\1/')
            disk_size=$(echo "$config_info" | grep -A 2 "$disk_path" | grep "capacityInKB" | awk '{print $3}' | tr -d '",')
            disk_size_gb=$((disk_size / 1024 / 1024))
            total_disk_size_gb=$((total_disk_size_gb + disk_size_gb))
        fi
    done <<< "$config_info"
    
    # Get IP addresses
    # IP adreslerini al
    guest_info=$(vim-cmd vmsvc/get.guest "$vmid")
    ip_addresses=$(echo "$guest_info" | grep "ipAddress" | awk -F'"' '{print $2}' | sort -u | tr '\n' ',' | sed 's/,$//')
    
    # Output in JSON format
    # JSON formatÄ±nda Ã§Ä±ktÄ± ver
    echo "    {" >> "$json_output"
    echo "      \"id\": \"$vmid\"," >> "$json_output"
    echo "      \"name\": \"$name\"," >> "$json_output"
    echo "      \"datastore_path\": \"$file\"," >> "$json_output"
    echo "      \"guest_os\": \"$guest_os\"," >> "$json_output"
    echo "      \"version\": \"$version\"," >> "$json_output"
    echo "      \"power_state\": \"$power_state\"," >> "$json_output"
    echo "      \"memory_mb\": $memory_mb," >> "$json_output"
    echo "      \"num_cpu\": $num_cpu," >> "$json_output"
    echo "      \"total_disk_size_gb\": $total_disk_size_gb," >> "$json_output"
    echo "      \"ip_addresses\": \"$ip_addresses\"" >> "$json_output"
    
    # Add comma if not last VM
    # Son VM deÄŸilse virgÃ¼l ekle
    if [ "$(echo "$vms" | tail -n +2 | tail -n1)" != "$line" ]; then
        echo "    }," >> "$json_output"
    else
        echo "    }" >> "$json_output"
    fi
done

# JSON end
# JSON sonlandÄ±rma
echo "  ]" >> "$json_output"
echo "}" >> "$json_output"

# Send JSON data to PHP script
# JSON verisini PHP script'e gÃ¶nder
curl -X POST -H "Content-Type: application/json" --data-binary "@$json_output" "$PHP_URL"

# Delete temporary file
# GeÃ§ici dosyayÄ± sil
rm "$json_output" 
